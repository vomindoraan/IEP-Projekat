version: '3'


services:
  user-service:
    build:
      context: .
      args:
        - SERVICE=user_service
    image: user-service
    depends_on:
      - user-service-migration
    environment:
      - DB_HOST=authdb
    networks:
      - auth-net
    ports:
      - 9000:9000
    command: python -m user_service

  user-service-migration:
    build:
      context: .
      args:
        - SERVICE=user_service
    image: user-service
    depends_on:
      authdb:
        condition: service_healthy
    environment:
      - DB_HOST=authdb
    networks:
      - auth-net
    command: python -m user_service.migrate


  admin-service:
    build:
      context: .
      args:
        - SERVICE=admin_service
    image: admin-service
    depends_on:
      - admin-service-migration
    environment:
      - DB_HOST=votedb
    networks:
      - vote-net
    ports:
      - 9010:9000
    command: python -m admin_service

  admin-service-migration:
    build:
      context: .
      args:
        - SERVICE=admin_service
    image: admin-service
    depends_on:
      authdb:
        condition: service_healthy
    environment:
      - DB_HOST=votedb
    networks:
      - vote-net
    command: python -m admin_service.migrate

  lookup:
    build:
      context: .
      args:
        - SERVICE=admin_service
    image: admin-service
    depends_on:
      - admin-service-migration
    environment:
      - DB_HOST=votedb
    networks:
      - vote-net
    ports:
      - 9011:9000
    command: python -m admin_service.lookup


  voting-service:
    build:
      context: .
      args:
        - SERVICE=voting_service
    image: voting-service
    depends_on:
      - redis
    networks:
      - auth-net
    ports:
      - 9020:9000
    command: python -m voting_service

  voting-daemon:
    build:
      context: .
      args:
        - SERVICE=voting_service
    image: voting-daemon
    depends_on:
      - votedb
      - redis
    networks:
      - vote-net
      - redis-net
    command: python -m voting_service.daemon


  redis:
    image: redis
    restart: always
    networks:
      - redis-net
    ports:
      - 6379:6379

  authdb:
    image: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 5s
      retries: 10
    volumes:
      - authdb-vol:/var/lib/mysql
    networks:
      - auth-net
    ports:
      - 3306:3306

  votedb:
    image: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 5s
      retries: 10
    volumes:
      - votedb-vol:/var/lib/mysql
    networks:
      - vote-net
    ports:
      - 3316:3306


  adminer:
    image: adminer
    networks:
      - auth-net
      - vote-net
    ports:
      - 8080:8080


volumes:
  authdb-vol:
  votedb-vol:


networks:
  auth-net:
  vote-net:
  redis-net:
